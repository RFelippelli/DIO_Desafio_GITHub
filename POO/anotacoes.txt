##### POO #####

programação orientada a objeto é um paradigma de programação, ou seja, corresponde
a uma técnica de programação para um fim específico
Quatro pilares desta técnica:
>Abstração
>Encapsulamento
>Herança
>Polimorfismo

Classes e Obejtos

classe: 
um molde, uma abstração do mundo real que queira ser representada na programação:
uma planta de casa, uma receita de bolo é uma classe.
uma classe possui um ou mais atributos
objeto:
A casa construida, o bolo é o objeto.
algo que se pode manipular. Posso ter varios objetos com base na mesma classe

Tipos de paradigmas de programação
POO
Estruturada
Imperativa
procedural
orientada a eventos
lógica
uma linguagem de programação pode possuir diversos paradigmas.
cada paradigmas possui seu grupo de regras e aplicação para cada situação.

Abstração:
Abstrair um objeto do mundo real para um contexto específico, considerando apenas
os atributos importantes

Encapsulamento:
O encapsulamento serve para proteger uma classe e definir limites para alteração
de suas propriedades
Oculta o comportamento e expõe somente o necessário
Modificadores de acesso:
public
protected internal
pretected
internal
privater protected 
private

Herança
A herança nos opermite reutilizar atributos, métodos e comportamentos de uma classe
em outras classes. 
serve para agrupar objetos que são do mesmo tipo,porém com características 
diferentes

Polimorfismo
significa muitas formas
com o polimorfismo é possivel sobrescrever (override) métodos das classes filhas 
para que se comportem de maneira diferente e ter sa própria implementação

Classe Abstrata
Uma classe abstrata tem como objetivo ser exclusivamente um modelo para ser herdado
portanto não pode ser instanciada.
Você pode implementar métodos ou deixa-los a cargo de quem herdar.
voce pode ter um metodo abstrato assim.

Classe Selada
Uma classe selada tem como objetivo de impedir que outras classes façam uma herança
dela, ou seja, nenhuma classe pode ser sua derivada.
Também existem métodos e propriedades seladas.
não permite sobreescrita/polimorfismo

Classe Object
A classe System.Object é a mãe de todas as classes na hierarquia do .NET
Todas as classes derivam, direta ou indiretamente da classe Object, e ela tem como
objetivo prover serviços de baixo nível para suas classes filhas.

Interfaces
Uma interface é um contrato que pode ser implementado por uma classe.
É como se fosse uma classe abstrata, podendo definir métodos abstratos para serem 
implementados.
Assim como uma classe abstrata, uma interface não pode ser instanciada.
Quando uma interface é implementada a uma classe, essa classe tem que usar as 
definições daquela interface.
Uma classe pode herdar mais de uma interface.

Arquivo
C# apresenta algumas classes estáticas que facilitam o trabalho com arquivos
dentre elas:
-file (manipular arquivos: ler, criar, apagar arquivos)
-directory (manipular diretorios: listar, criar, apagar diretorios)
-path (organizar caminhos de maneira lógica)

são classes estáticas não precisa instanciar, estão disponiveis para uso fazendo
import de system.io
manipular arquivos pode ser através do comando 
Directory.GetDirectories()
Directory.GetFiles()
Directory.CreateDirectory(Path.Combine("pasta 1", "pasta 2") - coloca a pasta 2
dentro da pasta 1
Directory.Delete

WriteAllText() -método que cria um novo arquivo, grava os conteúdos nele e o fecha. 
Se o arquivo de destino já existir, ele será substituído.

file.Move(caminho, destino)

file.OpenText() - Abre um arquivo de texto com codificação UTF-8 existente para 
leitura.

file.Copy(caminho, destino)

file.Delete()





