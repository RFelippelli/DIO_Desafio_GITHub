Array/vetor/matriz
O array é uma estrutura de dados que armazena valores do mesmo tipo, com um tamanho
fixo
int[] array = new int[4];
int[] array = new int [] {42, 75, 74, 61};
string[] nomes = {"jan","fev"};
após declarado o array não é possivel aumentar a capacidade dele.
seria necessário criar um novo array copiando os dados anteriores e atribuindo um
novo tamanho.
indice é a posição dos valores no array começando sempre por 0
Array multidimensional 
O array pode possuir mais de uma dimensão:
int[,] array= new int [4,2]; Array com 4 linhas e 2 colunas
para acessar o valor é preciso passar as duas dimensões array[1,1]

Ordenando Arrays
Para ordenar um array, existem diversos algoritmos de ordenação, diferentes 
técniucas e casos a serem considerados
BubbleSort ordena por comparação maior/menor
SelectionSort ordena comparando o primeiro numero e verificando se há alguém menor
que ele, e fazendo a troca
InsertionSort compara o valor e posiciona entre o maior e o menor algoritimo 
em relação ao que está sendo comparado

Classe Array
Classe array é uma calasse do C# que pertence ao namespace system que nos oferece 
diversos métodos que nos auxiliam a trabalhar com arrrays.  
Para utilizar um método da classe array primeiro se declara a classe seguindo por 
ponto . e em seguida o método: 
Array.TrueForAll (verifica se todos os itens de 
uma array são verdadeiros de acordo com a condição proposta e só retorna 
se todos forem True, array[](1, 2 , 3, 4, 5) se aplicarmos a verificação 
Array.TrueForAll(>0) todos vão retornar true se condição é verdadeira) 
Array.Sort, 
Array.Copy, 
Array.Exists, etc..

Array.IndexOf(array, valor); : Busca um indice pré definido dentro de um Array
Array.findIndex (busca um indice dentro de um array mas aceita equações como 
método de busca)

Coleções Genéricas
no c# existem classes de coleções que agrupam valores do mesmo tipo, e essas 
classes são padronizadas para as operações mais comuns, como:
ordenação
Obter valor por indice
obter valor com expressões
trabalhar com tamanhos dinamicos
pode-se criar uma coleção genérica usando umas das classes no namespace 
system.Collections.Generic.
Uma coleção genérica é util quando cad item na coleção tem o mesmo tipo de dados. 
Uma coleção genérica impôes tipagem forte permitindo que apenas o tipo de dados 
desejado seja adicionado.

Coleções específicas
As coleções específicas implementam regras para sua ordem de acesso e manipulação
de seus elementos, são elas:
Queue(fila): Obedece a ordem FIFO (first in first out)
Stack (pilha): Obedece a ordem LIFO (last in first out)
método Enqueue 
insere itens na fila
método Dequeue
remove itens da fila
método Peek 
busca um elemento na fila/pilha mas sem remove-lo da fila/lista
método Push insere um item no topo da pilha
método POP remove o elemento do topo da pilha 

Dicionários
Um dicionário é uma coleão de chave e valor, permitindo que você recupere 
rapidamente seus itens baseado em sua chave.
O dicionário armazena a sua chave em hash
Criação de um dicionário:
Dictionary<string, string> estados = new Dictionary<string, string>()
sempre que buscamos um valor no dictionary buscamos pela chave
sempre que tentar buscar uma chave que não existe no dictionary ele vai retornar
uma excessão e encerrar o programa
quando não sabemos se a chave existe no dicionario podemos utilizar TryGetValue
para que o programa não feche caso insira uma chave inexistente

Operações LINQ
O language integrated query é uma maneira de vc utilizar uma sintaxe de consulta
padronizada para coleções e objetos



